package co.kr.jaejoo.asset;

import java.lang.reflect.Field;
import java.lang.reflect.Method;

public class ReflectTest {

	public static void main(String[] args) throws ClassNotFoundException {
		Class<?> cls = Class.forName("ReflectCls");
		
		Field[] fields = cls.getFields();
		for(Field field : fields){
			System.out.println(field.getType().getName() + " " + field.getName() );
		}
		
		System.out.println("========================================");
		
		Method[] methods = cls.getMethods();
		StringBuffer sb = new StringBuffer();
		for(Method method : methods){
			sb.append(method.getName());
			
			// method인자 출력하기
			Class<?>[] argTypes = method.getParameterTypes();
			sb.append("(");
			int size = argTypes.length;
			for(Class<?> argType : argTypes){
				String argName = argType.getName();
				sb.append(argName + "val");
				if(--size != 0){
					sb.append(", ");
				}
			}
			sb.append(")");
			
			// 리턴인자를 출력한다.
			Class<?> returnType = method.getReturnType();
			sb.append(" : " + returnType.getName());
			System.out.println(sb);
			sb.setLength(0);
		}
		
		System.out.println("===========================================");
		
		try {
			Object obj = cls.newInstance();
			Method method = cls.getMethod("sum", int.class, int.class);
			System.out.println(method.invoke(obj, 1,2));
		} catch (InstantiationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (NoSuchMethodException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SecurityException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		
	}

}
